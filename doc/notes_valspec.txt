DSL for the configuration of a single parameter (value).

Parameter attributes
====================

	---------	----	--------	-------	-----------
	Attribute	Type	Notes		Default	Description
	---------	----	--------	-------	-----------
(a1)	name		TEXT	required	-	Parameter name
(a2)	description	TEXT	required	-	Human readable description
	---------	----	--------	-------	-----------
(a3)	ordered		BOOL	required	-	Fill by order (argument) or name (option)
(a4)	hidden		BOOL	optional	no
(a5)	list		BOOL	optional	no	Single value versus list of values.
(a6)	required	BOOL	optional	yes	mandatory vs. optional parameter.
(a7)	interactive	BOOL	optional	no	Allow user interaction to set value
	---------	----	--------	-------	-----------
(a8)	prompt		TEXT	optional	<name>	Text for interactive prompt
(a9)	default		TEXT	optional	-	Default value to use (raw, validate on use)
	---------	----	--------	-------	-----------
(a10)	generate	CMD	optional	{}	Command to generate default
(a11)	validate	CMD	optional	{}	Command to validate and transform user input
(a12)	on		CMD	optional	{}	Command to run when the parameter value is defined.
	---------	----	--------	-------	-----------
	flags		list(TEXT)			List of flags to recognize.

Constraints (between attributes):

(c1)	!ordered		=> default|generate|interactive
(c2)	!required		=> default|generate|interactive
(c3)	default			=> !generate
(c4)	interactive		=> prompt
----	----------------------------------------------------------
(c5)	list			=> ordered && is-last()
(c6)	hidden	   		=> !interactive && !ordered && required && !list
(c7)    !hidden && !ordered     => !required
----	----------------------------------------------------------

Legend:
	x  <=> defined (x)
	!x <=> undefined (x)

	A => B  <==> !A || B

==============================================================================

Definition commands. See also "notes_arguments.txt"

	   Attribute defaults
input	    ordered, !hidden, !list,  required, !interactive, !generate, !default, !validate, !on, !prompt
splat	    ordered, !hidden,  list,  required, !interactive, !generate, !default, !validate, !on, !prompt
option	   !ordered, !hidden, !list, !required, !interactive, !generate, !default, !validate, !on, !prompt
state	   !ordered,  hidden, !list,  required, !interactive, !generate, !default, !validate, !on, !prompt
	    (a3)     (a4)     (a5)   (default)		(standard)

input    vs splat  <-> list
option   vs state  <-> hidden
argument vs other  <-> ordered

splat  = list     argument
input  = non-list argument
option = visible unordered --> implies optional
state  = hidden  unordered --> implies required, not list

==============================================================================

	Or Hi Li Rq Notes
	-- -- -- -- --------------------------
*	0  0  0  0  scalar option
	0  0  0  1	FAIL c7 (visible unordered => !required)
*	0  0  1  0  list option
	0  0  1  1	FAIL c7 (visible unordered => !required)

	0  1  0  0	FAIL c6 (hidden => required)
*	0  1  0  1  state
	0  1  1  0	FAIL c6 (hidden => required)
	0  1  1  1	FAIL c6 (hidden => !list)

*	1  0  0  0  optional argument | input
*	1  0  0  1  required argument | input
*	1  0  1  0  optional splat    | splat
*	1  0  1  1  required splat    | splat

	1  1  0  0	FAIL c6 (hidden => !ordered)
	1  1  0  1	FAIL c6
	1  1  1  0	FAIL c6
	1  1  1  1	FAIL c6
	-- -- -- -- --------------------------
7 of 16

Allow 'list option' => multiple uses, collected.

==============================================================================

Not all commands apply to all parameters. See constraints.

	Command		Affected attribute	Notes
	-------		------------------	-----
(a6)	optional	required (reset)
(a7,a8)	interact ?TEXT?	interactive, prompt	Fail for hidden 	(c6)
(a9)	default DATA	default	 		Fail for generate	(c3)
(a10)	generate CMD	generate		Fail for default	(c3)
(a11)	validate CMD	validate
(a12)	on CMD		on
	list		list (set)		Fail for state, arguments (input)
	-------		------------------	-----
	alias		Extend list of flags	Fail for ordered|hidden
