# -*- tcl -*- Include file for xo.test.
# # ## ### ##### ######## ############# #####################

## Runtime parsing of a command line based on the argument spec.
## Cases to look at:
##
## arguments only
## - required only
## - optional only
## - required + optional
## - splat
##   - especially with optional arguments coming before.
## options only
## - scalar
## - list
## args + options
## - especially splat with options
## state
##
## Take examples from the intended target app
## NOTE: interaction not testable!! linenoise - mockup ?!

test xo-runtime-1.0 {private, parsing, opt args, thresholding} -body {
    Parse {
	input A - { validate integer }
	input B - { validate integer; optional ; default 0 }
	input C - { validate integer }
	input D - { validate integer; optional ; default 0 }
	input E - { validate integer }
    } 1 2 3 4 5
} -cleanup {
    x destroy
} -result {
    A = yes '1'
    B = yes '2'
    C = yes '3'
    D = yes '4'
    E = yes '5'
}

test xo-runtime-1.1 {private, parsing, opt args, thresholding} -body {
    Parse {
	input A - { validate integer }
	input B - { validate integer; optional ; default 0 }
	input C - { validate integer }
	input D - { validate integer; optional ; default 0 }
	input E - { validate integer }
    } 1 2 3
} -cleanup {
    x destroy
} -result {
    A = yes '1'
    B = no '<undef>'
    C = yes '2'
    D = no '<undef>'
    E = yes '3'
}

test xo-runtime-1.2 {private, parsing, opt args, thresholding} -body {
    Parse {
	input A - { validate integer }
	input B - { validate integer; optional ; default 0 }
	input C - { validate integer }
	input D - { validate integer; optional ; default 0 }
	input E - { validate integer }
    } 1 2 3 4
} -cleanup {
    x destroy
} -result {
    A = yes '1'
    B = yes '2'
    C = yes '3'
    D = no '<undef>'
    E = yes '4'
}

test xo-runtime-1.3 {private, parsing, opt args, thresholding} -body {
    Parse {
	input A - { validate integer }
	input B - { validate integer; optional ; default 0 }
	input C - { validate integer }
	input D - { validate integer; optional ; default 0 }
	input E - { validate integer }
    } 1 2 3 4 5
} -cleanup {
    x destroy
} -result {
    A = yes '1'
    B = yes '2'
    C = yes '3'
    D = yes '4'
    E = yes '5'
}

# # ## ### ##### ######## ############# #####################
return
