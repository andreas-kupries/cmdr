# -*- tcl -*- Include file for xo.test.
# # ## ### ##### ######## ############# #####################

## Runtime parsing of a command line based on the argument spec.
## Cases to look at:
##
## arguments only
## - required only
## - optional only
## - required + optional
## - splat
##   - especially with optional arguments coming before.
## options only
## - scalar
## - list
## args + options
## - especially splat with options
## state
##
## Take examples from the intended target app
## NOTE: interaction not testable!! linenoise - mockup ?!

# # ## ### ##### ######## ############# #####################
## Group I: 5 parameters, required and optional alternating. Called
## with zero to six arguments.

test xo-runtime-1.0 {required + optional arguments, not enough} -body {
    Parse {
	input A - { validate integer }
	input B - { validate integer; optional ; default 0 }
	input C - { validate integer }
	input D - { validate integer; optional ; default 0 }
	input E - { validate integer }
    }
} -cleanup {
    x destroy
} -returnCodes error \
    -result {wrong#args, not enough}

test xo-runtime-1.1 {required + optional arguments, not enough} -body {
    Parse {
	input A - { validate integer }
	input B - { validate integer; optional ; default 0 }
	input C - { validate integer }
	input D - { validate integer; optional ; default 0 }
	input E - { validate integer }
    } 1
} -cleanup {
    x destroy
} -returnCodes error \
    -result {wrong#args, not enough}

test xo-runtime-1.2 {required + optional arguments, not enough} -body {
    Parse {
	input A - { validate integer }
	input B - { validate integer; optional ; default 0 }
	input C - { validate integer }
	input D - { validate integer; optional ; default 0 }
	input E - { validate integer }
    } 1 2
} -cleanup {
    x destroy
} -returnCodes error \
    -result {wrong#args, not enough}

test xo-runtime-1.3 {required + optional arguments, assignment under thresholding} -body {
    Parse {
	input A - { validate integer }
	input B - { validate integer; optional ; default 0 }
	input C - { validate integer }
	input D - { validate integer; optional ; default 0 }
	input E - { validate integer }
    } 1 2 3
} -cleanup {
    x destroy
} -result {
    A = yes '1'
    B = no <undefined>
    C = yes '2'
    D = no <undefined>
    E = yes '3'
}

test xo-runtime-1.4 {required + optional arguments, assignment under thresholding} -body {
    Parse {
	input A - { validate integer }
	input B - { validate integer; optional ; default 0 }
	input C - { validate integer }
	input D - { validate integer; optional ; default 0 }
	input E - { validate integer }
    } 1 2 3 4
} -cleanup {
    x destroy
} -result {
    A = yes '1'
    B = yes '2'
    C = yes '3'
    D = no <undefined>
    E = yes '4'
}

test xo-runtime-1.5 {required + optional arguments, assignment under thresholding} -body {
    Parse {
	input A - { validate integer }
	input B - { validate integer; optional ; default 0 }
	input C - { validate integer }
	input D - { validate integer; optional ; default 0 }
	input E - { validate integer }
    } 1 2 3 4 5
} -cleanup {
    x destroy
} -result {
    A = yes '1'
    B = yes '2'
    C = yes '3'
    D = yes '4'
    E = yes '5'
}

test xo-runtime-1.6 {required + optional arguments, too many} -body {
    Parse {
	input A - { validate integer }
	input B - { validate integer; optional ; default 0 }
	input C - { validate integer }
	input D - { validate integer; optional ; default 0 }
	input E - { validate integer }
    } 1 2 3 4 5 6
} -cleanup {
    x destroy
} -returnCodes error \
    -result {wrong#args, too many}

# # ## ### ##### ######## ############# #####################
## Group II: Splat arguments, required and optional

test xo-runtime-2.0 {required + required splat, not enough} -body {
    Parse {
	input A - { validate integer }
	input B - { list ; validate integer }
    }
} -cleanup {
    x destroy
} -returnCodes error \
    -result {wrong#args, not enough}

test xo-runtime-2.1 {required + required splat, not enough} -body {
    Parse {
	input A - { validate integer }
	input B - { list ; validate integer }
    } 1
} -cleanup {
    x destroy
} -returnCodes error \
    -result {wrong#args, not enough}

test xo-runtime-2.2 {required + required splat} -body {
    Parse {
	input A - { validate integer }
	input B - { list ; validate integer }
    } 1 2
} -cleanup {
    x destroy
} -result {
    A = yes '1'
    B = yes '2'
}

test xo-runtime-2.3 {required + required splat} -body {
    Parse {
	input A - { validate integer }
	input B - { list ; validate integer }
    } 1 2 3
} -cleanup {
    x destroy
} -result {
    A = yes '1'
    B = yes '2 3'
}

test xo-runtime-2.4 {required + required splat} -body {
    Parse {
	input A - { validate integer }
	input B - { list ; validate integer }
    } 1 2 3 4
} -cleanup {
    x destroy
} -result {
    A = yes '1'
    B = yes '2 3 4'
}

# # ## ### ##### ######## ############# #####################

test xo-runtime-2.5 {required + optional splat, not enough} -body {
    Parse {
	input A - { validate integer }
	input B - { list ; optional ; validate integer }
    }
} -cleanup {
    x destroy
} -returnCodes error \
    -result {wrong#args, not enough}

test xo-runtime-2.6 {required + optional splat, empty} -body {
    Parse {
	input A - { validate integer }
	input B - { list ; optional ; validate integer }
    } 1
} -cleanup {
    x destroy
} -result {
    A = yes '1'
    B = no <undefined>
}

test xo-runtime-2.7 {required + optional splat} -body {
    Parse {
	input A - { validate integer }
	input B - { list ; optional ; validate integer }
    } 1 2
} -cleanup {
    x destroy
} -result {
    A = yes '1'
    B = yes '2'
}

test xo-runtime-2.8 {required + optional splat} -body {
    Parse {
	input A - { validate integer }
	input B - { list ; optional ; validate integer }
    } 1 2 3
} -cleanup {
    x destroy
} -result {
    A = yes '1'
    B = yes '2 3'
}

test xo-runtime-2.9 {required + optional splat} -body {
    Parse {
	input A - { validate integer }
	input B - { list ; optional ; validate integer }
    } 1 2 3 4
} -cleanup {
    x destroy
} -result {
    A = yes '1'
    B = yes '2 3 4'
}

# # ## ### ##### ######## ############# #####################

test xo-runtime-2.10 {optional + required splat, not enough} -body {
    Parse {
	input A - { optional ; validate integer }
	input B - { list ; validate integer }
    }
} -cleanup {
    x destroy
} -returnCodes error \
    -result {wrong#args, not enough}

test xo-runtime-2.11 {optional + required splat, not enough} -body {
    Parse {
	input A - { optional ; validate integer }
	input B - { list ; validate integer }
    } 1
} -cleanup {
    x destroy
} -result {
    A = no <undefined>
    B = yes '1'
}
test xo-runtime-2.12 {optional + required splat} -body {
    Parse {
	input A - { optional ; validate integer }
	input B - { list ; validate integer }
    } 1 2
} -cleanup {
    x destroy
} -result {
    A = yes '1'
    B = yes '2'
}

test xo-runtime-2.13 {optional + required splat} -body {
    Parse {
	input A - { optional ; validate integer }
	input B - { list ; validate integer }
    } 1 2 3
} -cleanup {
    x destroy
} -result {
    A = yes '1'
    B = yes '2 3'
}

test xo-runtime-2.14 {optional + required splat} -body {
    Parse {
	input A - { optional ; validate integer }
	input B - { list ; validate integer }
    } 1 2 3 4
} -cleanup {
    x destroy
} -result {
    A = yes '1'
    B = yes '2 3 4'
}

# # ## ### ##### ######## ############# #####################

test xo-runtime-2.15 {optional + optional splat, not enough} -body {
    Parse {
	input A - { optional ; validate integer }
	input B - { list ; optional ; validate integer }
    }
} -cleanup {
    x destroy
} -result {
    A = no <undefined>
    B = no <undefined>
}

test xo-runtime-2.16 {optional + optional splat, empty} -body {
    Parse {
	input A - { optional ; validate integer }
	input B - { list ; optional ; validate integer }
    } 1
} -cleanup {
    x destroy
} -result {
    A = yes '1'
    B = no <undefined>
}

test xo-runtime-2.17 {optional + optional splat} -body {
    Parse {
	input A - { optional ; validate integer }
	input B - { list ; optional ; validate integer }
    } 1 2
} -cleanup {
    x destroy
} -result {
    A = yes '1'
    B = yes '2'
}

test xo-runtime-2.18 {optional + optional splat} -body {
    Parse {
	input A - { optional ; validate integer }
	input B - { list ; optional ; validate integer }
    } 1 2 3
} -cleanup {
    x destroy
} -result {
    A = yes '1'
    B = yes '2 3'
}

test xo-runtime-2.19 {optional + optional splat} -body {
    Parse {
	input A - { optional ; validate integer }
	input B - { list ; optional ; validate integer }
    } 1 2 3 4
} -cleanup {
    x destroy
} -result {
    A = yes '1'
    B = yes '2 3 4'
}
# # ## ### ##### ######## ############# #####################
return
