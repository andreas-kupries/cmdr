# -*- tcl -*- Include file for xo.test.
# # ## ### ##### ######## ############# #####################

# TODO: privates (argument specifications & runtime parsing)

test xo-6.0 {basic private, parameter default settings} -body {
    xo create x foo {
	common def {
	    input  INPUT  INPUT-DESC
	    option OPTION OPTION-DESC
	    state  STATE  STATE-DESC
	    splat  SPLAT  SPLAT-DESC
	}
	private bar {
	    description TEST
	    use def
	} ::snafu
    }
    ShowPrivate [x lookup bar]
} -cleanup {
    x destroy
} -result {
    foo bar = {
        description: TEST
        store (def): '
	    input  INPUT  INPUT-DESC
	    option OPTION OPTION-DESC
	    state  STATE  STATE-DESC
	    splat  SPLAT  SPLAT-DESC
	'
        --n --> (--no-OPTION)
        --no --> (--no-OPTION)
        --no- --> (--no-OPTION)
        --no-O --> (--no-OPTION)
        --no-OP --> (--no-OPTION)
        --no-OPT --> (--no-OPTION)
        --no-OPTI --> (--no-OPTION)
        --no-OPTIO --> (--no-OPTION)
        --no-OPTION --> (--no-OPTION)
        --O --> (--OPTION)
        --OP --> (--OPTION)
        --OPT --> (--OPTION)
        --OPTI --> (--OPTION)
        --OPTIO --> (--OPTION)
        --OPTION --> (--OPTION)
        P (INPUT) {
            description: INPUT-DESC
            ordered, required
            default: 'no'
            []
            g ()
            v (xo::validate::boolean)
            o ()
        }
        P (OPTION) {
            description: OPTION-DESC
            default: 'no'
            [--OPTION --no-OPTION]
            g ()
            v (xo::validate::boolean)
            o ()
        }
        P (SPLAT) {
            description: SPLAT-DESC
            ordered, splat, required
            default: ''
            []
            g ()
            v (xo::validate::boolean)
            o ()
        }
        P (STATE) {
            description: STATE-DESC
            hidden, required
            default: 'no'
            []
            g ()
            v (xo::validate::boolean)
            o ()
        }
    }
}


test xo-6.1 {private, optional arguments, thresholding} -body {
    xo create x foo {
	private bar {
	    description 6.1
	    input A - {}
	    input B - { optional }
	    input C - {}
	    input D - { optional }
	    input E - {}
	} ::snafu
    }
    ShowPrivate [x lookup bar]
} -cleanup {
    x destroy
} -result {
    foo bar = {
        description: 6.1
        P (A) {
            description: -
            ordered, required
            default: 'no'
            []
            g ()
            v (xo::validate::boolean)
            o ()
        }
        P (B) {
            description: -
            ordered
            default: 'no'
            mode=threshold 4
            []
            g ()
            v (xo::validate::boolean)
            o ()
        }
        P (C) {
            description: -
            ordered, required
            default: 'no'
            []
            g ()
            v (xo::validate::boolean)
            o ()
        }
        P (D) {
            description: -
            ordered
            default: 'no'
            mode=threshold 2
            []
            g ()
            v (xo::validate::boolean)
            o ()
        }
        P (E) {
            description: -
            ordered, required
            default: 'no'
            []
            g ()
            v (xo::validate::boolean)
            o ()
        }
    }
}

# TODO: parameter specification commands (syntax, constraints, effects)
#
# optional, interact, default, generate, validate, on
#

# # ## ### ##### ######## ############# #####################
return
