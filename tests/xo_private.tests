# -*- tcl -*- Include file for xo.test.
# # ## ### ##### ######## ############# #####################

# TODO: privates (argument specifications)

test xo-6.0 {basic private, parameter default settings} -body {
    xo create x foo {
	common def {
	    input  INPUT  INPUT-DESC
	    option OPTION OPTION-DESC
	    state  STATE  STATE-DESC
	    splat  SPLAT  SPLAT-DESC
	}
	private bar {
	    description TEST
	    use def
	} ::snafu
    }
    ShowPrivate [x lookup bar]
} -cleanup {
    x destroy
} -result {
    foo bar = {
        description: 'TEST'
        store (def): '
	    input  INPUT  INPUT-DESC
	    option OPTION OPTION-DESC
	    state  STATE  STATE-DESC
	    splat  SPLAT  SPLAT-DESC
	'
        --n --> (--no-OPTION)
        --no --> (--no-OPTION)
        --no- --> (--no-OPTION)
        --no-O --> (--no-OPTION)
        --no-OP --> (--no-OPTION)
        --no-OPT --> (--no-OPTION)
        --no-OPTI --> (--no-OPTION)
        --no-OPTIO --> (--no-OPTION)
        --no-OPTION --> (--no-OPTION)
        --O --> (--OPTION)
        --OP --> (--OPTION)
        --OPT --> (--OPTION)
        --OPTI --> (--OPTION)
        --OPTIO --> (--OPTION)
        --OPTION --> (--OPTION)
        P (INPUT) {
            description: 'INPUT-DESC'
            ordered, required
            default: 'no'
            []
            g ()
            v (xo::validate::boolean)
            o ()
        }
        P (OPTION) {
            description: 'OPTION-DESC'
            default: 'no'
            [--no-OPTION --OPTION]
            g ()
            v (xo::validate::boolean)
            o ()
        }
        P (SPLAT) {
            description: 'SPLAT-DESC'
            ordered, splat, required
            default: ''
            []
            g ()
            v (xo::validate::boolean)
            o ()
        }
        P (STATE) {
            description: 'STATE-DESC'
            hidden, required
            default: 'no'
            []
            g ()
            v (xo::validate::boolean)
            o ()
        }
    }
}


test xo-6.1 {private, optional arguments, thresholding} -body {
    xo create x foo {
	private bar {
	    description 6.1
	    input A - {}
	    input B - { optional }
	    input C - {}
	    input D - { optional }
	    input E - {}
	} ::snafu
    }
    ShowPrivate [x lookup bar]
} -cleanup {
    x destroy
} -result {
    foo bar = {
        description: '6.1'
        P (A) {
            description: '-'
            ordered, required
            default: 'no'
            []
            g ()
            v (xo::validate::boolean)
            o ()
        }
        P (B) {
            description: '-'
            ordered
            default: 'no'
            mode=threshold 4
            []
            g ()
            v (xo::validate::boolean)
            o ()
        }
        P (C) {
            description: '-'
            ordered, required
            default: 'no'
            []
            g ()
            v (xo::validate::boolean)
            o ()
        }
        P (D) {
            description: '-'
            ordered
            default: 'no'
            mode=threshold 2
            []
            g ()
            v (xo::validate::boolean)
            o ()
        }
        P (E) {
            description: '-'
            ordered, required
            default: 'no'
            []
            g ()
            v (xo::validate::boolean)
            o ()
        }
    }
}

# # ## ### ##### ######## ############# #####################

test xo-6.2 {private, input, optional} -body {
    xo create x foo { private bar { input A - { optional } } ::snafu }
    ShowPrivate [x lookup bar]
} -cleanup {
    x destroy
} -result {
    foo bar = {
        description: ''
        P (A) {
            description: '-'
            ordered
            default: 'no'
            mode=threshold 1
            []
            g ()
            v (xo::validate::boolean)
            o ()
        }
    }
}

test xo-6.3 {private, input, interact} -body {
    xo create x foo { private bar { input A - { interact } } ::snafu }
    ShowPrivate [x lookup bar]
} -cleanup {
    x destroy
} -result {
    foo bar = {
        description: ''
        P (A) {
            description: '-'
            ordered, required, interact
            default: 'no'
            prompt: 'Enter A:'
            []
            g ()
            v (xo::validate::boolean)
            o ()
        }
    }
}

test xo-6.4.0 {private, input, default} -body {
    xo create x foo { private bar { input A - { default 0 } } ::snafu }
    ShowPrivate [x lookup bar]
} -cleanup {
    x destroy
} -result {
    foo bar = {
        description: ''
        P (A) {
            description: '-'
            ordered, required
            default: '0'
            []
            g ()
            v (xo::validate::boolean)
            o ()
        }
    }
}

test xo-6.4.1 {private, input, default} -body {
    xo create x foo { private bar { input A - { default 2 } } ::snafu }
    ShowPrivate [x lookup bar]
} -cleanup {
    x destroy
} -result {
    foo bar = {
        description: ''
        P (A) {
            description: '-'
            ordered, required
            default: '2'
            []
            g ()
            v (xo::validate::integer)
            o ()
        }
    }
}

test xo-6.4.2 {private, input, default} -body {
    xo create x foo { private bar { input A - { default X } } ::snafu }
    ShowPrivate [x lookup bar]
} -cleanup {
    x destroy
} -result {
    foo bar = {
        description: ''
        P (A) {
            description: '-'
            ordered, required
            default: 'X'
            []
            g ()
            v (xo::validate::identity)
            o ()
        }
    }
}

test xo-6.5 {private, input, generate} -body {
    xo create x foo { private bar { input A - { generate X } } ::snafu }
    ShowPrivate [x lookup bar]
} -cleanup {
    x destroy
} -result {
    foo bar = {
        description: ''
        P (A) {
            description: '-'
            ordered, required
            no default
            []
            g (X)
            v (xo::validate::identity)
            o ()
        }
    }
}

test xo-6.6.0 {private, input, validate} -body {
    xo create x foo { private bar { input A - { validate integer } } ::snafu }
    ShowPrivate [x lookup bar]
} -cleanup {
    x destroy
} -result {
    foo bar = {
        description: ''
        P (A) {
            description: '-'
            ordered, required
            default: '0'
            []
            g ()
            v (xo::validate::integer)
            o ()
        }
    }
}

test xo-6.6.1 {private, input, validate} -body {
    xo create x foo { private bar { input A - { validate ::xo::validate::identity } } ::snafu }
    ShowPrivate [x lookup bar]
} -cleanup {
    x destroy
} -result {
    foo bar = {
        description: ''
        P (A) {
            description: '-'
            ordered, required
            default: ''
            []
            g ()
            v (::xo::validate::identity)
            o ()
        }
    }
}

test xo-6.7 {private, input, on} -body {
    xo create x foo { private bar { input A - { on X } } ::snafu }
    ShowPrivate [x lookup bar]
} -cleanup {
    x destroy
} -result {
    foo bar = {
        description: ''
        P (A) {
            description: '-'
            ordered, required
            default: 'no'
            []
            g ()
            v (xo::validate::boolean)
            o (X)
        }
    }
}

test xo-6.8 {private, input, alias} -body {
    xo create x foo { private bar { input A - { alias X } } ::snafu }
    [x lookup bar] keys
} -cleanup {
    x destroy
} -returnCodes error \
    -result {Argument A cannot have aliases}

test xo-6.9 {private, input, test} -body {
    xo create x foo { private bar { input A - { test } } ::snafu }
    [x lookup bar] keys
} -cleanup {
    x destroy
} -returnCodes error \
    -result {Required argument A cannot change test-mode for optional argument}

# # ## ### ##### ######## ############# #####################

test xo-7.2 {private, splat, optional} -body {
    xo create x foo { private bar { splat A - { optional } } ::snafu }
    ShowPrivate [x lookup bar]
} -cleanup {
    x destroy
} -result {
    foo bar = {
        description: ''
        P (A) {
            description: '-'
            ordered, splat
            default: ''
            mode=threshold 1
            []
            g ()
            v (xo::validate::boolean)
            o ()
        }
    }
}

test xo-7.3 {private, splat, interact} -body {
    xo create x foo { private bar { splat A - { interact } } ::snafu }
    ShowPrivate [x lookup bar]
} -cleanup {
    x destroy
} -result {
    foo bar = {
        description: ''
        P (A) {
            description: '-'
            ordered, splat, required, interact
            default: ''
            prompt: 'Enter A:'
            []
            g ()
            v (xo::validate::boolean)
            o ()
        }
    }
}

test xo-7.4.0 {private, splat, default} -body {
    xo create x foo { private bar { splat A - { default 0 } } ::snafu }
    ShowPrivate [x lookup bar]
} -cleanup {
    x destroy
} -result {
    foo bar = {
        description: ''
        P (A) {
            description: '-'
            ordered, splat, required
            default: '0'
            []
            g ()
            v (xo::validate::boolean)
            o ()
        }
    }
}

test xo-7.4.1 {private, splat, default} -body {
    xo create x foo { private bar { splat A - { default 2 } } ::snafu }
    ShowPrivate [x lookup bar]
} -cleanup {
    x destroy
} -result {
    foo bar = {
        description: ''
        P (A) {
            description: '-'
            ordered, splat, required
            default: '2'
            []
            g ()
            v (xo::validate::integer)
            o ()
        }
    }
}

test xo-7.4.2 {private, splat, default} -body {
    xo create x foo { private bar { splat A - { default X } } ::snafu }
    ShowPrivate [x lookup bar]
} -cleanup {
    x destroy
} -result {
    foo bar = {
        description: ''
        P (A) {
            description: '-'
            ordered, splat, required
            default: 'X'
            []
            g ()
            v (xo::validate::identity)
            o ()
        }
    }
}

test xo-7.5 {private, splat, generate} -body {
    xo create x foo { private bar { splat A - { generate X } } ::snafu }
    ShowPrivate [x lookup bar]
} -cleanup {
    x destroy
} -result {
    foo bar = {
        description: ''
        P (A) {
            description: '-'
            ordered, splat, required
            no default
            []
            g (X)
            v (xo::validate::identity)
            o ()
        }
    }
}

test xo-7.6.0 {private, splat, validate} -body {
    xo create x foo { private bar { splat A - { validate integer } } ::snafu }
    ShowPrivate [x lookup bar]
} -cleanup {
    x destroy
} -result {
    foo bar = {
        description: ''
        P (A) {
            description: '-'
            ordered, splat, required
            default: ''
            []
            g ()
            v (xo::validate::integer)
            o ()
        }
    }
}

test xo-7.6.1 {private, splat, validate} -body {
    xo create x foo { private bar { splat A - { validate ::xo::validate::identity } } ::snafu }
    ShowPrivate [x lookup bar]
} -cleanup {
    x destroy
} -result {
    foo bar = {
        description: ''
        P (A) {
            description: '-'
            ordered, splat, required
            default: ''
            []
            g ()
            v (::xo::validate::identity)
            o ()
        }
    }
}

test xo-7.7 {private, splat, on} -body {
    xo create x foo { private bar { splat A - { on X } } ::snafu }
    ShowPrivate [x lookup bar]
} -cleanup {
    x destroy
} -result {
    foo bar = {
        description: ''
        P (A) {
            description: '-'
            ordered, splat, required
            default: ''
            []
            g ()
            v (xo::validate::boolean)
            o (X)
        }
    }
}

test xo-7.8 {private, splat, alias} -body {
    xo create x foo { private bar { splat A - { alias X } } ::snafu }
    [x lookup bar] keys
} -cleanup {
    x destroy
} -returnCodes error \
    -result {Argument A cannot have aliases}

test xo-7.9 {private, splat, test} -body {
    xo create x foo { private bar { splat A - { test } } ::snafu }
    [x lookup bar] keys
} -cleanup {
    x destroy
} -returnCodes error \
    -result {Required argument A cannot change test-mode for optional argument}

# # ## ### ##### ######## ############# #####################

test xo-8.2 {private, option, optional} -body {
    xo create x foo { private bar { option A - { optional } } ::snafu }
    ShowPrivate [x lookup bar]
} -cleanup {
    x destroy
} -result {
    foo bar = {
        description: ''
        --n --> (--no-A)
        --no --> (--no-A)
        --no- --> (--no-A)
        --no-A --> (--no-A)
        -A --> (-A)
        P (A) {
            description: '-'
            default: 'no'
            [--no-A -A]
            g ()
            v (xo::validate::boolean)
            o ()
        }
    }
}

test xo-8.3 {private, option, interact} -body {
    xo create x foo { private bar { option A - { interact } } ::snafu }
    ShowPrivate [x lookup bar]
} -cleanup {
    x destroy
} -result {
    foo bar = {
        description: ''
        --n --> (--no-A)
        --no --> (--no-A)
        --no- --> (--no-A)
        --no-A --> (--no-A)
        -A --> (-A)
        P (A) {
            description: '-'
            interact
            default: 'no'
            prompt: 'Enter A:'
            [--no-A -A]
            g ()
            v (xo::validate::boolean)
            o ()
        }
    }
}

test xo-8.4.0 {private, option, default} -body {
    xo create x foo { private bar { option A - { default 0 } } ::snafu }
    ShowPrivate [x lookup bar]
} -cleanup {
    x destroy
} -result {
    foo bar = {
        description: ''
        --n --> (--no-A)
        --no --> (--no-A)
        --no- --> (--no-A)
        --no-A --> (--no-A)
        -A --> (-A)
        P (A) {
            description: '-'
            default: '0'
            [--no-A -A]
            g ()
            v (xo::validate::boolean)
            o ()
        }
    }
}

test xo-8.4.1 {private, option, default} -body {
    xo create x foo { private bar { option A - { default 2 } } ::snafu }
    ShowPrivate [x lookup bar]
} -cleanup {
    x destroy
} -result {
    foo bar = {
        description: ''
        -A --> (-A)
        P (A) {
            description: '-'
            default: '2'
            [-A]
            g ()
            v (xo::validate::integer)
            o ()
        }
    }
}

test xo-8.4.2 {private, option, default} -body {
    xo create x foo { private bar { option A - { default X } } ::snafu }
    ShowPrivate [x lookup bar]
} -cleanup {
    x destroy
} -result {
    foo bar = {
        description: ''
        -A --> (-A)
        P (A) {
            description: '-'
            default: 'X'
            [-A]
            g ()
            v (xo::validate::identity)
            o ()
        }
    }
}

test xo-8.5 {private, option, generate} -body {
    xo create x foo { private bar { option A - { generate X } } ::snafu }
    ShowPrivate [x lookup bar]
} -cleanup {
    x destroy
} -result {
    foo bar = {
        description: ''
        -A --> (-A)
        P (A) {
            description: '-'
            no default
            [-A]
            g (X)
            v (xo::validate::identity)
            o ()
        }
    }
}

test xo-8.6.0 {private, option, validate} -body {
    xo create x foo { private bar { option A - { validate integer } } ::snafu }
    ShowPrivate [x lookup bar]
} -cleanup {
    x destroy
} -result {
    foo bar = {
        description: ''
        -A --> (-A)
        P (A) {
            description: '-'
            default: '0'
            [-A]
            g ()
            v (xo::validate::integer)
            o ()
        }
    }
}

test xo-8.6.1 {private, option, validate} -body {
    xo create x foo { private bar { option A - { validate ::xo::validate::identity } } ::snafu }
    ShowPrivate [x lookup bar]
} -cleanup {
    x destroy
} -result {
    foo bar = {
        description: ''
        -A --> (-A)
        P (A) {
            description: '-'
            default: ''
            [-A]
            g ()
            v (::xo::validate::identity)
            o ()
        }
    }
}

test xo-8.7 {private, option, on} -body {
    xo create x foo { private bar { option A - { on X } } ::snafu }
    ShowPrivate [x lookup bar]
} -cleanup {
    x destroy
} -result {
    foo bar = {
        description: ''
        --n --> (--no-A)
        --no --> (--no-A)
        --no- --> (--no-A)
        --no-A --> (--no-A)
        -A --> (-A)
        P (A) {
            description: '-'
            default: 'no'
            [--no-A -A]
            g ()
            v (xo::validate::boolean)
            o (X)
        }
    }
}

test xo-8.8 {private, option, alias} -body {
    xo create x foo { private bar { option A - { alias X } } ::snafu }
    ShowPrivate [x lookup bar]
} -cleanup {
    x destroy
} -result {
    foo bar = {
        description: ''
        --n --> (--no-A)
        --no --> (--no-A)
        --no- --> (--no-A)
        --no-A --> (--no-A)
        -A --> (-A)
        -X --> (-X)
        P (A) {
            description: '-'
            default: 'no'
            [--no-A -A -X]
            g ()
            v (xo::validate::boolean)
            o ()
        }
    }
}

test xo-8.9 {private, option, test} -body {
    xo create x foo { private bar { option A - { test } } ::snafu }
    [x lookup bar] keys
} -cleanup {
    x destroy
} -returnCodes error \
    -result {Option A cannot change test-mode for optional argument}

# # ## ### ##### ######## ############# #####################

test xo-9.2 {private, state, optional} -body {
    xo create x foo { private bar { state A - { optional } } ::snafu }
    ShowPrivate [x lookup bar]
} -cleanup {
    x destroy
} -result {
    foo bar = {
        description: ''
        P (A) {
            description: '-'
            hidden
            default: 'no'
            []
            g ()
            v (xo::validate::boolean)
            o ()
        }
    }
}

test xo-9.3 {private, state, interact} -body {
    xo create x foo { private bar { state A - { interact } } ::snafu }
    [x lookup bar] keys
} -cleanup {
    x destroy
} -returnCodes error \
    -result {Hidden parameter A cannot be set by the user}

test xo-9.4.0 {private, state, default} -body {
    xo create x foo { private bar { state A - { default 0 } } ::snafu }
    ShowPrivate [x lookup bar]
} -cleanup {
    x destroy
} -result {
    foo bar = {
        description: ''
        P (A) {
            description: '-'
            hidden, required
            default: '0'
            []
            g ()
            v (xo::validate::boolean)
            o ()
        }
    }
}

test xo-9.4.1 {private, state, default} -body {
    xo create x foo { private bar { state A - { default 2 } } ::snafu }
    ShowPrivate [x lookup bar]
} -cleanup {
    x destroy
} -result {
    foo bar = {
        description: ''
        P (A) {
            description: '-'
            hidden, required
            default: '2'
            []
            g ()
            v (xo::validate::integer)
            o ()
        }
    }
}

test xo-9.4.2 {private, state, default} -body {
    xo create x foo { private bar { state A - { default X } } ::snafu }
    ShowPrivate [x lookup bar]
} -cleanup {
    x destroy
} -result {
    foo bar = {
        description: ''
        P (A) {
            description: '-'
            hidden, required
            default: 'X'
            []
            g ()
            v (xo::validate::identity)
            o ()
        }
    }
}

test xo-9.5 {private, state, generate} -body {
    xo create x foo { private bar { state A - { generate X } } ::snafu }
    ShowPrivate [x lookup bar]
} -cleanup {
    x destroy
} -result {
    foo bar = {
        description: ''
        P (A) {
            description: '-'
            hidden, required
            no default
            []
            g (X)
            v (xo::validate::identity)
            o ()
        }
    }
}

test xo-9.6.0 {private, state, validate} -body {
    xo create x foo { private bar { state A - { validate integer } } ::snafu }
    ShowPrivate [x lookup bar]
} -cleanup {
    x destroy
} -result {
    foo bar = {
        description: ''
        P (A) {
            description: '-'
            hidden, required
            default: '0'
            []
            g ()
            v (xo::validate::integer)
            o ()
        }
    }
}

test xo-9.6.1 {private, state, validate} -body {
    xo create x foo { private bar { state A - { validate ::xo::validate::identity } } ::snafu }
    ShowPrivate [x lookup bar]
} -cleanup {
    x destroy
} -result {
    foo bar = {
        description: ''
        P (A) {
            description: '-'
            hidden, required
            default: ''
            []
            g ()
            v (::xo::validate::identity)
            o ()
        }
    }
}

test xo-9.7 {private, state, on} -body {
    xo create x foo { private bar { state A - { on X } } ::snafu }
    ShowPrivate [x lookup bar]
} -cleanup {
    x destroy
} -result {
    foo bar = {
        description: ''
        P (A) {
            description: '-'
            hidden, required
            default: 'no'
            []
            g ()
            v (xo::validate::boolean)
            o (X)
        }
    }
}

test xo-9.8 {private, state, alias} -body {
    xo create x foo { private bar { state A - { alias X } } ::snafu }
    [x lookup bar] keys
} -cleanup {
    x destroy
} -returnCodes error \
    -result {Hidden parameter A cannot have aliases}

test xo-9.9 {private, state, test} -body {
    xo create x foo { private bar { state A - { test } } ::snafu }
    [x lookup bar] keys
} -cleanup {
    x destroy
} -returnCodes error \
    -result {Hidden parameter A cannot change test-mode for optional argument}

# # ## ### ##### ######## ############# #####################
return
